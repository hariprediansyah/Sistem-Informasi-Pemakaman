/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Menu;

import appcode.form.RoundedGradientButton;
import appcode.table.TableActionCellEditor;
import appcode.table.TableActionCellRender;
import appcode.table.TableActionEvent;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import koneksi.Koneksi;

/**
 *
 * @author coyha
 */
public class MenuReservasi extends javax.swing.JPanel {

    /**
     * Creates new form MenuHome
     */
    DefaultTableModel model;
    Connection conn = new Koneksi().connect();
    public MenuReservasi() {
        initComponents();
        loadData();
        tblData.fixTable(jScrollPane1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new appcode.table.TableDark();
        jLabel2 = new javax.swing.JLabel();
        btnReport = new RoundedGradientButton("Report");
        btnAdd = new RoundedGradientButton("Tambah");

        setBackground(new java.awt.Color(45, 48, 51));

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Action", "Tanggal Reservasi", "Lokasi Makam", "Blok", "Petak", "User Input"
            }
        ));
        jScrollPane1.setViewportView(tblData);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Reservasi");

        btnReport.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnReport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 878, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        setupDialog().setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnReportActionPerformed
    
    private void loadData() {
    String sql = "SELECT " +
                    "r.id AS reservasi_id, " +
                    "r.tanggal_reservasi, " +
                    "u.nama_lengkap, " +
                    "l.nama_lokasi, " +
                    "b.kode_blok, " +
                    "p.nomor_petak " +
                    "FROM reservasi r " +
                       "INNER JOIN users u ON r.user_id = u.id " +
                       "INNER JOIN petak_makam p ON r.petak_id = p.id " +
                       "LEFT JOIN blok_makam b ON p.blok_id = b.id " +
                       "LEFT JOIN lokasi_makam l ON b.lokasi_id = l.id " +
                    "ORDER BY r.tanggal_reservasi DESC";

    Object[] Baris = {
        "No",
        "Action",
        "Tanggal Reservasi",
        "Lokasi Makam",
        "Blok",
        "Petak",
        "Nama",
    };

    model = new DefaultTableModel(null, Baris);
    tblData.setModel(model);

    try {
        Statement stat = conn.createStatement();
        ResultSet hasil = stat.executeQuery(sql);
        int num = 1;
        while (hasil.next()) {
            String[] data = {
                Integer.toString(num),
                hasil.getString("reservasi_id"),
                hasil.getString("tanggal_reservasi"),
                hasil.getString("nama_lokasi"),
                hasil.getString("kode_blok"),
                hasil.getString("nomor_petak"),
                hasil.getString("nama_lengkap")
            };
            model.addRow(data);
            num++;
        }

        TableActionEvent actionEvent = new TableActionEvent() {
            @Override
            public void onEdit(int row) {
                DialogReservasiAddEdit dialog = setupDialog();
                dialog.setData(Integer.parseInt(model.getValueAt(row, 1).toString()));
                dialog.setVisible(true);
            }

            @Override
            public void onDelete(int row) {
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(null, "Konfirmasi hapus reservasi?", "Warning", dialogButton);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    String kode = model.getValueAt(row, 1).toString();
                    String deleteSql = "DELETE FROM reservasi WHERE id = ?";
                    try {
                        PreparedStatement stat = conn.prepareStatement(deleteSql);
                        stat.setString(1, kode);
                        stat.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Reservasi Berhasil Dihapus");
                        loadData();
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, "Reservasi Gagal Dihapus: " + e.getMessage());
                    }
                }
            }
        };

        tblData.getColumnModel().getColumn(1).setCellRenderer(new TableActionCellRender());
        tblData.getColumnModel().getColumn(1).setCellEditor(new TableActionCellEditor(actionEvent));

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal memuat data: " + e.getMessage());
    }
}

    
    private DialogReservasiAddEdit setupDialog() {
        DialogReservasiAddEdit dialog = new DialogReservasiAddEdit(null, true);
        dialog.addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {
                
            }

            @Override
            public void windowClosing(WindowEvent e) {
                
            }

            @Override
            public void windowClosed(WindowEvent e) {
                loadData();
            }

            @Override
            public void windowIconified(WindowEvent e) {
                
            }

            @Override
            public void windowDeiconified(WindowEvent e) {
                
            }

            @Override
            public void windowActivated(WindowEvent e) {
                
            }

            @Override
            public void windowDeactivated(WindowEvent e) {
                
            }
        });
        return dialog;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnReport;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private appcode.table.TableDark tblData;
    // End of variables declaration//GEN-END:variables
}
